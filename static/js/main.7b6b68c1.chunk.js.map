{"version":3,"sources":["components/Card.js","utility.js","components/CardList.js","components/ErrorBoundary.js","components/Scroll.js","components/SearchBox.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["Card","children","className","integerArray","n","arr","Array","i","CardList","robots","loading","map","color","robot","src","id","alt","name","email","ErrorBoundary","props","state","hasError","this","setState","Component","Scroll","SearchBox","onSearchChange","type","placeholder","onChange","CHANGE_SEARCH_FIELD","connect","searchField","dispatch","value","target","payload","useState","setRobots","useEffect","fetch","then","res","json","users","t","v","Promise","resolve","setTimeout","bind","filteredRobots","filter","toLowerCase","includes","length","initialState","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"+SAWeA,EARF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,qBAAKC,UAAU,2DAAf,SACGD,K,yBCAA,SAASE,EAAaC,GAG3B,IAFA,IAAMC,EAAM,IAAIC,MAAMF,GAEbG,EAAI,EAAGA,EAAIH,IAAKG,EACvBF,EAAIE,GAAKA,EAGX,OAAOF,ECPT,IA6BeG,EA7BE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAClB,OADwC,EAAdC,QAGtB,qBAAKR,UAAU,WAAf,SAEGC,EAAa,GAAGQ,KAAI,SAACJ,GAAD,OACnB,cAAC,EAAD,UACE,cAAC,IAAD,CAAYG,SAAS,EAAME,MAAM,WADxBL,QASjB,qBAAKL,UAAU,WAAf,SACGO,EAAOE,KAAI,SAACE,GAAD,OACV,eAAC,EAAD,WACE,qBAAKC,IAAG,+BAA0BD,EAAME,IAAMC,IAAI,WAClD,gCACE,oBAAId,UAAU,KAAd,SAAoBW,EAAMI,OAC1B,mBAAGf,UAAU,KAAb,SAAmBW,EAAMK,aAJlBL,EAAME,U,gCCAVI,E,kDApBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,WACEC,KAAKC,SAAS,CAAEF,UAAU,M,oBAG5B,WACE,OAAIC,KAAKF,MAAMC,SACN,0DAEAC,KAAKH,MAAMnB,a,GAhBIwB,aCKbC,G,MAJA,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAChB,OAAO,qBAAKC,UAAU,SAAf,SAAyBD,MCWnB0B,EAbG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,OACE,qBAAK1B,UAAU,WAAf,SACE,uBACE2B,KAAK,SACL3B,UAAU,mCACV4B,YAAY,gBACZC,SAAUH,OCTLI,EAAsB,sB,MCyCnC,IAQeC,eARS,SAACZ,GAAD,MAAY,CAClCa,YAAab,EAAMa,gBAGM,SAACC,GAAD,MAAe,CACxCP,eAAgB,gBAAaQ,EAAb,EAAGC,OAAUD,MAAb,OAA2BD,EC5CJ,CACvCN,KAAMG,EACNM,QD0CmEF,QAGtDH,EAnCf,YAA+C,IAAhCL,EAA+B,EAA/BA,eAAgBM,EAAe,EAAfA,YAAe,EAChBK,mBAAS,IADO,mBACrC9B,EADqC,KAC7B+B,EAD6B,KAG5CC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,ONpBUC,EMoBO,INpBJC,EMoBUF,ENnB1B,IAAIG,SAAQ,SAAUC,GAC3BC,WAAWD,EAAQE,KAAK,KAAMJ,GAAID,MAF/B,IAAeA,EAAGC,KMqBlBL,KAAKH,KACP,IAEH,IAAMa,EAAiB5C,EAAO6C,QAAO,SAAC7C,GACpC,OAAOA,EAAOQ,KAAKsC,cAAcC,SAAStB,EAAYqB,kBAGxD,OACE,sBAAKrD,UAAU,iBAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAW0B,eAAgBA,IAC3B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUnB,OAAQ4C,EAAgB3C,SAAUD,EAAOgD,mB,OEhCvDC,EAAe,CACnBxB,YAAa,ICcf,IAAMyB,EAAQC,aDXc,WAAmC,IAAlCvC,EAAiC,uDAAzBqC,EAAcG,EAAW,uCAC5D,OAAQA,EAAOhC,MACb,KAAKG,EACH,OAAO,2BACFX,GADL,IAEEa,YAAa2B,EAAOvB,UAExB,QACE,OAAOjB,KCG2ByC,IAAe,WAAf,EAJrB,KAMnBC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.7b6b68c1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ children }) => {\n  return (\n    <div className=\"card bg-light-green dib br3 pa4 ma2 grow bw2 shadow-5 tc\">\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","export function delay(t, v) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve.bind(null, v), t);\n  });\n}\n\nexport function integerArray(n) {\n  const arr = new Array(n);\n\n  for (let i = 0; i < n; ++i) {\n    arr[i] = i;\n  }\n\n  return arr;\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"./CartList.css\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\nimport { integerArray } from \"../utility\";\n\nconst CardList = ({ robots, loading }) => {\n  if (loading) {\n    return (\n      <div className=\"cardlist\">\n        {/* TODO Hardcoded # of loading elements here*/}\n        {integerArray(8).map((i) => (\n          <Card key={i}>\n            <BeatLoader loading={true} color=\"white\" />\n          </Card>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cardlist\">\n      {robots.map((robot) => (\n        <Card key={robot.id}>\n          <img src={`https://robohash.org/${robot.id}`} alt=\"robots\" />\n          <div>\n            <h2 className=\"f3\">{robot.name}</h2>\n            <p className=\"f5\">{robot.email}</p>\n          </div>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops. That is not good.</h1>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport \"./Scroll.css\";\n\nconst Scroll = ({ children }) => {\n  return <div className=\"scroll\">{children}</div>;\n};\n\nexport default Scroll;\n","import React from \"react\";\n\nconst SearchBox = ({ onSearchChange }) => {\n  return (\n    <div className=\"pas2 ma3\">\n      <input\n        type=\"search\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        placeholder=\"search robots\"\n        onChange={onSearchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n","import React, { useState, useEffect } from \"react\";\n\nimport CardList from \"../components/CardList\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Scroll from \"../components/Scroll\";\nimport SearchBox from \"../components/SearchBox\";\n\nimport { connect } from \"react-redux\";\nimport { setSearchField } from \"../actions\";\n\nimport { delay } from \"../utility\";\n\nimport \"./App.css\";\n\nfunction App({ onSearchChange, searchField }) {\n  const [robots, setRobots] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => delay(2000, users))\n      .then(setRobots);\n  }, []);\n\n  const filteredRobots = robots.filter((robots) => {\n    return robots.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return (\n    <div className=\"app tc courier\">\n      <h1 className=\"f1\">Robofriends</h1>\n      <SearchBox onSearchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundary>\n          <CardList robots={filteredRobots} loading={!robots.length} />\n        </ErrorBoundary>\n      </Scroll>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  searchField: state.searchField,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSearchChange: ({ target: { value } }) => dispatch(setSearchField(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { CHANGE_SEARCH_FIELD } from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n","import { CHANGE_SEARCH_FIELD } from \"./constants\";\n\nconst initialState = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return {\n        ...state,\n        searchField: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport \"./index.css\";\nimport \"tachyons\";\n\nimport App from \"./containers/App\";\nimport { searchRobots } from \"./reducers\";\n\nconst middleWare = [];\nif (process.env.NODE_ENV !== \"production\") {\n  middleWare.push(logger);\n}\nconst store = createStore(searchRobots, applyMiddleware(...middleWare));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}